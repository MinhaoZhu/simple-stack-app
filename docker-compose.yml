version: "3.3"
services:
  # Web service layer
  nginx:
    image: nginx:alpine
    volumes:
      - "./app:/var/www/html"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
    ports:
      - "8000:80"
    depends_on:
      - php
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure

  # nginx:
  #   # container_name: mynginx
  #   # restart: always
  #   ports:
  #   # External Port:Internal Port
  #     - "8000:80"
  #   image: nginx
  #   depends_on:
  #     - php
  #   volumes:
  #     - ./src:/var/www/html
  #     - ./src/nginx.ini:/etc/nginx/conf.d/default.conf

  # Application service layer
  php:
    image: uniquedockerenv/php-fpm-mysql-redis-image:v1
    depends_on:
    # Services Name(not container name)
      - mysql
      - redis
    volumes:
      - ./src:/var/www/html
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure

  mysql:
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: MyDBRoot123
      MYSQL_DATABASE: cloud_computing 
      MYSQL_USER: php
      MYSQL_PASSWORD: php
    deploy:
      mode: replicated
      replicas: 2
      labels: [MySQLDB]
      restart_policy:
        condition: on-failure

  redis:
    image: redis
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure

  myAdmin:
    ports:
      - "8082:80"
    image: phpmyadmin
    environment: 
      PMA_HOST: mysql
    deploy:
      restart_policy:
        condition: on-failure

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
