version: "3.8"
services:
  # Web service layer
  nginx:
    image: nginx:alpine
    volumes:
      - "./app:/var/www/html"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
    ports:
      - "8000:80"
    depends_on:
      - php
    deploy:
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure

  # Application service layer
  php:
    image: customphp
    # Use this line if on server
    # image: uniquedockerenv/php-fpm-mysql-redis-image:amd64

    # Use this line on local development
    # image: uniquedockerenv/php-fpm-mysql-redis-image:v1
    volumes:
      - "./app:/var/www/html"
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
  
  mysql:
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: MyDBRoot123
      MYSQL_DATABASE: cloud_computing 
      MYSQL_USER: php
      MYSQL_PASSWORD: php
    deploy:
      mode: replicated
      replicas: 3
      labels: [MySQLDB]
      restart_policy:
        condition: on-failure

  redis:
    image: redis
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure

  myAdmin:
    ports:
      - "8082:80"
    image: phpmyadmin
    environment: 
      PMA_HOST: mysql
      #deploy:
      #mode: replicated
      #replicas: 2
      #restart_policy:
      #condition: on-failure

  # Uncomment the following when on server to view the manager/worker
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
